# src/streamlit_app/paginas/inserir.py
import streamlit as st
# Ajuste os caminhos de importa√ß√£o conforme a estrutura do seu projeto Streamlit
# Se 'components', 'services', 'config' est√£o em subdiret√≥rios de 'streamlit_app'
# e 'paginas' tamb√©m, ent√£o:
from components.ui_elements import formulario_inserir_filme, seletor_de_banco_global_sidebar
from components.display_utils import processar_e_exibir_resposta_simples_api
from services.operation_handlers import handle_inserir_filme_operacao
from config.settings import BANCOS_SUPORTADOS

st.set_page_config(layout="wide", page_title="Inserir Novo Filme")
st.title("‚ûï Inserir Novo Filme")
st.markdown("Preencha os dados abaixo para adicionar um novo filme ao banco de dados selecionado.")

# Gerenciamento do banco selecionado para esta p√°gina
if 'banco_selecionado_pagina_inserir' not in st.session_state:
    st.session_state.banco_selecionado_pagina_inserir = "mongo" # Default

banco_chave_selecionada = seletor_de_banco_global_sidebar()
st.session_state.banco_selecionado_pagina_inserir = banco_chave_selecionada
nome_amigavel_banco = BANCOS_SUPORTADOS.get(banco_chave_selecionada, banco_chave_selecionada.capitalize())
# Opcional: Mostrar qual banco est√° selecionado (para o usu√°rio ver)
#st.sidebar.caption(f"Operando em: {nome_amigavel_banco}") # Mostra na sidebar abaixo do seletor

st.markdown(f"Voc√™ est√° inserindo dados no banco: **{nome_amigavel_banco}**")
st.markdown("---")

# Chama o formul√°rio para obter os dados do filme
# O formul√°rio_inserir_filme retorna o dicion√°rio do filme se submetido e v√°lido, sen√£o None
dados_do_novo_filme = formulario_inserir_filme(chave_form="form_filme_principal_inserir")

if dados_do_novo_filme:
    # Se o formul√°rio foi submetido e os dados s√£o v√°lidos
    placeholder_insercao = st.empty() # Para feedback visual durante a opera√ß√£o
    with st.spinner(f"Inserindo o filme '{dados_do_novo_filme.get('titulo', 'Novo Filme')}' em {banco_chave_selecionada}..."):
        # Chama o handler da opera√ß√£o, que chama o api_service
        resposta_api_insercao = handle_inserir_filme_operacao(
            dados_filme=dados_do_novo_filme,
            banco_selecionado=st.session_state.banco_selecionado_pagina_inserir
        )
        # Guarda a resposta no session_state para persistir entre reruns se necess√°rio
        st.session_state['ultima_resposta_insercao_filme'] = resposta_api_insercao
        if placeholder_insercao: # Limpa o placeholder
            placeholder_insercao.empty()

# Exibe o resultado da √∫ltima opera√ß√£o de inser√ß√£o, se houver
if 'ultima_resposta_insercao_filme' in st.session_state:
    st.subheader("üìã Resultado da Inser√ß√£o:")
    processar_e_exibir_resposta_simples_api(
        st.session_state['ultima_resposta_insercao_filme'],
        banco_chave_selecionada, # Passa o nome amig√°vel do banco para a fun√ß√£o de display
        operacao="Inser√ß√£o de Filme" # Informa o tipo de opera√ß√£o para a mensagem
    )
    # Bot√£o para limpar o resultado e permitir nova inser√ß√£o sem ver o resultado antigo
    if st.button("Limpar Resultado e Inserir Novo Filme"):
        del st.session_state['ultima_resposta_insercao_filme']
        st.rerun() # For√ßa um rerun para limpar o formul√°rio (se ele n√£o limpar por si s√≥)

st.markdown("---")
st.caption("Nota: O 'ID do T√≠tulo' ser√° usado como a chave prim√°ria `_id` no MongoDB.")